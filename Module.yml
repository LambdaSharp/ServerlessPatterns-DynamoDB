Module: ServerlessPatterns.DynamoDB
Description: Sample module for deploying a DynamoDB table with default configuration for single-table data models
Items:

  - Parameter: DataTableCapacity
    Description: Read/Write capacity for DynamoDB table (empty value means on-demand)
    Section: DataTable
    Label: Read/Write Capacity
    Type: String
    Default: ""
    AllowedPattern: (\d+,\d+)?
    ConstraintDescription: Value must either be two number separated by a comma (e.g. "5,5") or empty for on-demand

  - Condition: DataTableCapacityIsOnDemand
    Value: !Equals [ !Ref DataTableCapacity, "" ]

  - Variable: DataTableName
    Scope: stack
    Description: DynamoDB Table Name
    Value: !Ref DataTable

  - Resource: DataTable
    Description: DynamoDB table
    Type: AWS::DynamoDB::Table
    Properties:

      # Make billing mode adjustable via parameters; makes it easier to adjust once deployed
      BillingMode: !If [ DataTableCapacityIsOnDemand, PAY_PER_REQUEST, PROVISIONED ]
      ProvisionedThroughput: !If
        - DataTableCapacityIsOnDemand
        - !Ref AWS::NoValue
        - ReadCapacityUnits: !Select [ 0, !Split [ ",", !Ref DataTableCapacity ]]
          WriteCapacityUnits: !Select [ 1, !Split [ ",", !Ref DataTableCapacity ]]

      AttributeDefinitions:

        # Always use string type "S" for keys until you know what you're doing
        - AttributeName: PK
          AttributeType: S

        - AttributeName: SK
          AttributeType: S

        - AttributeName: LSI1SK
          AttributeType: S

        - AttributeName: GSI1PK
          AttributeType: S

        - AttributeName: GSI1SK
          AttributeType: S

      # Always use the same PK/SK schema for all your tables
      KeySchema:
        - AttributeName: PK
          KeyType: HASH

        - AttributeName: SK
          KeyType: RANGE

      # Nice feature to have to ensure records go away past their due date
      TimeToLiveSpecification:
        AttributeName: _ttl
        Enabled: true

      # Local Secondary Index
      LocalSecondaryIndexes:
        - IndexName: LSI1
          KeySchema:

            - AttributeName: PK
              KeyType: HASH

            - AttributeName: LSI1SK
              KeyType: RANGE

          # Optimize the projection type once you know what you're doing
          Projection:
            ProjectionType: ALL

      # Global Secondary Index
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:

            - AttributeName: GSI1PK
              KeyType: HASH

            - AttributeName: GSI1SK
              KeyType: RANGE

          # Optimize the projection type once you know what you're doing
          Projection:
            ProjectionType: ALL

